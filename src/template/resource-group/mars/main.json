{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Resource deployment environment."
            },
            "allowedValues": [ "devl", "qual", "prod" ],
            "defaultValue": "devl"
        },
        "utc": {
            "type": "string",
            "metadata": {
                "description": "Current time stamp"
            },
            "defaultValue": "[utcNow('yyyyMMddTHHmmss')]"
        }
    },
    "functions": [
        {
            "namespace": "mars",
            "members": {
                "resourceNamePrefix": {
                    "parameters": [
                        {
                            "name": "resourceGroupName",
                            "type": "string"
                        },
                        {
                            "name": "environment",
                            "type": "string"
                        },
                        {
                            "name": "resourceType",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('resourceGroupName'),'-', parameters('environment'), '-', parameters('resourceType'), '-')]",
                        "type": "string"
                    }
                },
                "formatDeploymentName": {
                    "parameters": [
                        {
                            "name": "resourceGroupName",
                            "type": "string"
                        },
                        {
                            "name": "environment",
                            "type": "string"
                        },
                        {
                            "name": "resourceType",
                            "type": "string"
                        },
                        {
                            "name": "utc",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('resourceGroupName'), '-', parameters('environment'),'-', parameters('resourceType'), '-deployment-', parameters('utc'))]",
                        "type": "string"
                    }
                }
            }
        }
    ],
    "variables": {

        "nicStorageDeployment": "[mars.formatDeploymentName(resourceGroup().name, parameters('environment'), variables('resourceType').nic , parameters('utc'))]",
        "nicStorageNamePrefix": "[mars.resourceNamePrefix(resourceGroup().name, parameters('environment'), variables('resourceType').nic)]",

        "privateDnsZoneDeployment": "[mars.formatDeploymentName(resourceGroup().name, parameters('environment'), variables('resourceType').privateDns , parameters('utc'))]",
        "privateDnsZoneNamePrefix": "[mars.resourceNamePrefix(resourceGroup().name, parameters('environment'), variables('resourceType').privateDns)]",

        "resourceReferenceType": {
            "storage": "storage",
            "sql": "sql",
            "web": "web"
        },
        "resourceType": {
            "virtualNetwork": "vnet",
            "storageAccount": "storage",
            "privateLink": "private-link",
            "privateDns": "private-dns",
            "nic": "nic",
            "privateEndpoint": "private-endpoint",
            "cosmosDb": "cosmos-db"
        },

        "storageAccountResourceNamePrefix": "[mars.resourceNamePrefix(resourceGroup().name, parameters('environment'), variables('resourceType').storageAccount)]",
        "storageAccountDeployment": "[mars.formatDeploymentName(resourceGroup().name, parameters('environment'), variables('resourceType').storageAccount , parameters('utc'))]",

        "storagePrivateEndpointDeployment": "[mars.formatDeploymentName(resourceGroup().name, parameters('environment'), variables('resourceType').privateEndpoint , parameters('utc'))]",
        "storagePrivateEndpointNamePrefix": "[mars.resourceNamePrefix(resourceGroup().name, parameters('environment'), variables('resourceType').privateEndpoint)]",

        "cosmosDbDeployment": "[mars.formatDeploymentName(resourceGroup().name, parameters('environment'), variables('resourceType').cosmosDb , parameters('utc'))]",
        "cosmosDbNamePrefix": "[mars.resourceNamePrefix(resourceGroup().name, parameters('environment'), variables('resourceType').cosmosDb)]",

        "vnetDeployment": "[mars.formatDeploymentName(resourceGroup().name, parameters('environment'), variables('resourceType').virtualNetwork , parameters('utc'))]",
        "vnetResourceNamePrefix": "[mars.resourceNamePrefix(resourceGroup().name, parameters('environment'), variables('resourceType').virtualNetwork)]"
    },
    "resources": [
        {
            "name": "[variables('vnetDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "resourceNamePrefix": {
                        "value": "[variables('vnetResourceNamePrefix')]"
                    }
                },
                "templateLink": {
                    "relativePath": "./vnet/virtual-network-template.json"
                }
            }
        },
        {
            "name": "[variables('storageAccountDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('vnetDeployment'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "resourceNamePrefix": {
                        "value": "[variables('storageAccountResourceNamePrefix')]"
                    },
                    "storageSubnetId": {
                        "value": "[reference(variables('vnetDeployment')).outputs.storageSubnetId.value]"
                    }
                },
                "templateLink": {
                    "relativePath": "./storage/storage-account-template.json"
                }
            }
        },
        {
            "name": "[variables('privateDnsZoneDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('vnetDeployment'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "resourceNamePrefix": {
                        "value": "[variables('privateDnsZoneNamePrefix')]"
                    }
                },
                "templateLink": {
                    "relativePath": "./private-dns-zone/private-dns-zone-template.json"
                }
            }
        },
        {
            "name": "[variables('nicStorageDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('vnetDeployment'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('storageAccountDeployment'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "resourceName": {
                        "value": "[coalesce(variables('nicStorageNamePrefix'),variables('resourceReferenceType').storage,'000')]"
                    },
                    "subnetId": {
                        "value": "[reference(variables('vnetDeployment')).outputs.storageSubnetId.value]"
                    },
                    "instance": {
                        "value": "000"
                    },
                    "ipConfigNamePrefix": {
                        "value": "blob-blob."
                    }
                },
                "templateLink": {
                    "relativePath": "./nic/nic-template.json"
                }
            }
        },
        {
            "name": "[variables('storagePrivateEndpointDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('vnetDeployment'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('storageAccountDeployment'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "resourceNamePrefix": {
                        "value": "[variables('storagePrivateEndpointNamePrefix')]"
                    },
                    "storageAccountId": {
                        "value": "[reference(variables('storageAccountDeployment')).outputs.storageAccountId.value]"
                    },
                    "instance": {
                        "value": "000"
                    },
                    "resourceReferenceType": {
                        "value": "[variables('resourceReferenceType').storage]"
                    },
                    "storageSubnetId": {
                        "value": "[reference(variables('vnetDeployment')).outputs.storageSubnetId.value]"
                    }
                },
                "templateLink": {
                    "relativePath": "./private-endpoint/private-endpoint-template.json"
                }
            }
        },
        {
            "name": "[variables('cosmosDbDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "resourceNamePrefix": {
                        "value": "[variables('cosmosDbNamePrefix')]"
                    },
                    "databaseName":{
                        "value": "readings"
                    }
                },
                "templateLink": {
                    "relativePath": "./cosmos-db/cosmos-db-template.json"
                }
            }
        }
    ],
    "outputs": {
        "cosmosDbRescourceId": {
            "type": "string",
            "value": "[reference(variables('cosmosDbDeployment')).outputs.cosmosDbRescourceId.value]"
        }
    }
}